using G1ANT.Engine;
using G1ANT.Language;
using NUnit.Framework;
using System;
using System.IO;

namespace G1ANT.Addon.Selenium.Tests
{
    [TestFixture]
    public class SeleniumOpenTests
    {
        private Scripter scripter;

        [SetUp]
        public void TestInitialize()
        {
            Language.Addon addon = Language.Addon.Load(@"G1ANT.Addon.Selenium.dll");
            Environment.CurrentDirectory = TestContext.CurrentContext.TestDirectory;
        }

        [Test, Timeout(SeleniumTests.TestTimeout)]
        public void BrowsersOpenTestSuccessTest()
        {
            scripter = new Scripter();
scripter.InitVariables.Clear();
            scripter.Text = $@"
                selenium.open type {SpecialChars.Text}chrome{SpecialChars.Text}
                selenium.open type {SpecialChars.Text}firefox{SpecialChars.Text}
                selenium.open type {SpecialChars.Text}ie{SpecialChars.Text}
                selenium.open type {SpecialChars.Text}firefox{SpecialChars.Text}
                selenium.open type {SpecialChars.Text}firefox{SpecialChars.Text}
                selenium.open type {SpecialChars.Text}ie{SpecialChars.Text}
                selenium.open type {SpecialChars.Text}chrome{SpecialChars.Text}
                selenium.open type {SpecialChars.Text}chrome{SpecialChars.Text}
                selenium.open type {SpecialChars.Text}edge{SpecialChars.Text}";
            scripter.Run();

            Assert.AreEqual(3, SeleniumTests.FirefoxGetInstancesCount());
            Assert.AreEqual(3, SeleniumTests.ChromeGetInstancesCount());
            Assert.AreEqual(2, SeleniumTests.IeGetInstancesCount());
            Assert.IsTrue(SeleniumTests.EdgeGetInstancesCount() > 0);
        }

        [Test, Timeout(SeleniumTests.TestTimeout)]
        public void BrowsersOpenTestNavigateSuccessTest()
        {
            scripter = new Scripter();
scripter.InitVariables.Clear();
            scripter.Text = $@"
                selenium.open type {SpecialChars.Text}chrome{SpecialChars.Text} url tibia.pl
                selenium.open type {SpecialChars.Text}firefox{SpecialChars.Text} url google.pl
                selenium.open type {SpecialChars.Text}ie{SpecialChars.Text} url wp.pl
                selenium.open type {SpecialChars.Text}edge{SpecialChars.Text} url interia.pl
                selenium.switch 0
                selenium.switch 1
                selenium.switch 2
                selenium.switch 3";
            scripter.Run();
        }

        [Test, Timeout(SeleniumTests.TestTimeout)]
        public void BrowsersOpenTestFailTest()
        {
            scripter = new Scripter();
scripter.InitVariables.Clear();
            scripter.Text = $@"
                selenium.open type {SpecialChars.Text}wrongtype{SpecialChars.Text}";
            Exception exception = Assert.Throws<ApplicationException>(delegate
            {
                scripter.Run();
            });
            Assert.IsInstanceOf<ArgumentException>(exception.GetBaseException());
        }

        [TearDown]
        public void CleanUp()
        {
            SeleniumTests.KillAllBrowserProcesses();
        }
    }
}
